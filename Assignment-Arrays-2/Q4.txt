In C++:


class Solution {
public:
    bool canPlaceFlowers(vector<int>& flowerbed, int n) {
        int  count = 0;
        if(flowerbed.size() == 1 && flowerbed[0] == 0){

            return n <= 1;
        }else if(flowerbed.size() == 1 && flowerbed[0] == 1){
            return n == 0;
        }
        int  i =0;

        int len = flowerbed.size();
       while(i < flowerbed.size()) {
           if(flowerbed[i] == 0) {
                if(i == 0 && flowerbed[i+1] == 0){
                    count++;
                    flowerbed[i] = 1;
                    i += 1;
                }else if(i == len-1 && flowerbed[i-1] == 0) {
                    count++;
                    

                }else if( i != 0 && i != len-1 && flowerbed[i-1] == 0  && flowerbed[i+1] == 0)  {
                   count++;
                   flowerbed[i] = 1;
                   i += 1;
                                      
               }
           }
          
           i++;
       }

 
       return count >= n;
        
    }
};