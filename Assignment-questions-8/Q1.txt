IN C++:



class Solution {
public:
     int dfs(string& s1,string& s2,vector<vector<int>>& dp,int i,int j){
        if(i<0 && j<0) return 0;
        if(i<0){
            return s2[j]+dfs(s1,s2,dp,i,j-1); 
        }
        if(j<0){
            return s1[i] + dfs(s1,s2,dp,i-1,j);
        }
        if(dp[i][j] != -1) return dp[i][j];
        if(s1[i] == s2[j]){
            return dfs(s1,s2,dp,i-1,j-1);
        }
        int a = s1[i] + dfs(s1,s2,dp,i-1,j);
        int b = s2[j]+dfs(s1,s2,dp,i,j-1); 
        return dp[i][j] = min(a,b);
    }
    int minimumDeleteSum(string s1, string s2) {
        int n = s1.size();
        int m = s2.size();
        vector<vector<int>> dp(n,vector<int>(m,-1));
        return dfs(s1,s2,dp,n-1,m-1);
        
    }
};