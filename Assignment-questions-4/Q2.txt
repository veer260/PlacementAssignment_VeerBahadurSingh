In c++: 



class Solution {
    private:
    static int findIndex(vector<int> nums, int target) {
        int start = 0;
        int end = nums.size()-1;
        int mid = start + (end-start)/2;
        while(start <= end) {
            if(nums[mid] == target) {
                return mid;
            }else if(nums[mid] > target) {
                end = mid -1;
            }else {
                start = mid+1;
            }

            mid = start + (end-start)/2;

        }
        return -1;
    }
public:
    vector<vector<int>> findDifference(vector<int>& nums1, vector<int>& nums2) {
        vector<vector<int>> ans;
        sort(nums1.begin(), nums1.end());
        sort(nums2.begin(), nums2.end());

        vector<int> n1;
        vector<int> n2;
        for(int i = 0; i < nums1.size(); i++){
            if( i > 0 && nums1[i] == nums1[i-1]){
                continue;
            }
            
            int index = findIndex(nums2, nums1[i]);
            if(index == -1){
                n1.push_back(nums1[i]);
            }
        }

        for(int i = 0; i < nums2.size(); i++){
            if(i > 0 && nums2[i] == nums2[i-1]){
                continue;
            }
            int index = findIndex(nums1, nums2[i]);
            if(index == -1){
                n2.push_back(nums2[i]);

            }
        }

        ans.push_back(n1);
        ans.push_back(n2);
        return ans;
        
        
    }
};